import { buildConfigValidator } from '../validator';
import { VectorOperationsProvider } from './vectorOperationsProvider';
import type { PineconeRecord, RecordId, RecordMetadata } from './types';
export type FetchOptions = Array<RecordId>;
export type FetchResponse<T extends RecordMetadata = RecordMetadata> = {
    records?: {
        [key: string]: PineconeRecord<T>;
    };
    namespace?: string;
};
export declare class FetchCommand<T extends RecordMetadata = RecordMetadata> {
    apiProvider: VectorOperationsProvider;
    namespace: string;
    validator: ReturnType<typeof buildConfigValidator>;
    constructor(apiProvider: any, namespace: any);
    run(ids: FetchOptions): Promise<FetchResponse<T>>;
}
