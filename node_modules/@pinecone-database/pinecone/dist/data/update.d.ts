import { buildConfigValidator } from '../validator';
import { VectorOperationsProvider } from './vectorOperationsProvider';
import type { RecordId, RecordValues, RecordSparseValues, RecordMetadata } from './types';
export type UpdateOptions<T extends RecordMetadata = RecordMetadata> = {
    id: RecordId;
    values?: RecordValues;
    sparseValues?: RecordSparseValues;
    metadata?: T;
};
export declare class UpdateCommand<T extends RecordMetadata = RecordMetadata> {
    apiProvider: VectorOperationsProvider;
    namespace: string;
    validator: ReturnType<typeof buildConfigValidator>;
    constructor(apiProvider: any, namespace: any);
    run(options: UpdateOptions<T>): Promise<void>;
}
