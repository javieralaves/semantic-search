"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateSparseValues = exports.generateRecords = exports.randomString = void 0;
var randomString = function (length) {
    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    var result = '';
    for (var i = 0; i < length; i++) {
        var randomIndex = Math.floor(Math.random() * characters.length);
        result += characters.charAt(randomIndex);
    }
    return result;
};
exports.randomString = randomString;
var generateRecords = function (dimension, quantity, withSparseValues) {
    var vectors = [];
    for (var i = 0; i < quantity; i++) {
        var values = [];
        for (var j = 0; j < dimension; j++) {
            values.push(Math.random());
        }
        var vector = {
            id: i.toString(),
            values: values,
        };
        if (withSparseValues) {
            vector = __assign(__assign({}, vector), { sparseValues: (0, exports.generateSparseValues)(dimension) });
        }
        vectors.push(vector);
    }
    return vectors;
};
exports.generateRecords = generateRecords;
var generateSparseValues = function (dimension) {
    var values = [];
    var indices = [];
    for (var j = 0; j < dimension; j++) {
        values.push(Math.random());
        indices.push(j);
    }
    var sparseValues = { indices: indices, values: values };
    return sparseValues;
};
exports.generateSparseValues = generateSparseValues;
//# sourceMappingURL=test-helpers.js.map